{"ast":null,"code":"import _regeneratorRuntime from\"/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./App.scss';import QuoteBox from\"./Components/QuoteBox.component\";import Spinner from'react-bootstrap/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";var quoteURL=\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";var colorsArr=['4FC1FF',\"E8B9AB\",'CB769E','69995D','D2D7DF','3AA7A3','ECA400','006992','AFECE7','81F499','890620','B6465F','8ACDEA'];var randomArrVal=function randomArrVal(arr){console.log(arr);var randomNum=Math.floor(Math.random()*arr.length);console.log(arr[randomNum]);return arr[randomNum];};var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;setData(json);case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}useEffect(function(){fetchData();},[url]);return data;};function App(){var _useState3=useState('#4FC1FF'),_useState4=_slicedToArray(_useState3,2),accentColor=_useState4[0],setAccentColor=_useState4[1];var quotes=useFetch(quoteURL);var _useState5=useState({author:'',quote:''}),_useState6=_slicedToArray(_useState5,2),currentQuote=_useState6[0],setCurrentQuote=_useState6[1];useEffect(function(){if(quotes){handleNewQuote();}},[quotes]);var handleNewQuote=function handleNewQuote(){setAccentColor(\"#\".concat(randomArrVal(colorsArr)));var quoteArr=quotes.quotes;setCurrentQuote(randomArrVal(quoteArr));};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",style:{backgroundColor:\"\".concat(accentColor),color:\"\".concat(accentColor)},children:currentQuote.quote===\"\"?/*#__PURE__*/_jsx(Spinner,{className:\"loading-spinner\",animation:\"grow\",variant:\"light\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Loading...\"})}):/*#__PURE__*/_jsx(QuoteBox,{accentColor:accentColor,currentQuote:currentQuote,handleNewQuote:handleNewQuote})});}export default App;","map":{"version":3,"sources":["/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/src/App.js"],"names":["React","useEffect","useState","QuoteBox","Spinner","quoteURL","colorsArr","randomArrVal","arr","console","log","randomNum","Math","floor","random","length","useFetch","url","data","setData","fetchData","fetch","response","json","App","accentColor","setAccentColor","quotes","author","quote","currentQuote","setCurrentQuote","handleNewQuote","quoteArr","backgroundColor","color"],"mappings":"ojBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,C,2CAEA,GAAIC,CAAAA,QAAQ,CAAG,wIAAf,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAAC,QAAD,CAAW,QAAX,CAAqB,QAArB,CAA+B,QAA/B,CAAyC,QAAzC,CAAmD,QAAnD,CAA6D,QAA7D,CAAuE,QAAvE,CAAiF,QAAjF,CAA2F,QAA3F,CAAqG,QAArG,CAA+G,QAA/G,CAAyH,QAAzH,CAAlB,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAS,CAC5BC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,GAAIG,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBN,GAAG,CAACO,MAA/B,CAAhB,CACAN,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,SAAD,CAAf,EACA,MAAOH,CAAAA,GAAG,CAACG,SAAD,CAAV,CACD,CALD,CAOA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,GAAG,CAAI,CACtB,cAAwBf,QAAQ,CAAC,IAAD,CAAhC,wCAAOgB,IAAP,eAAaC,OAAb,eADsB,QAGPC,CAAAA,SAHO,qIAGtB,2KACyBC,CAAAA,KAAK,CAACJ,GAAD,CAD9B,QACQK,QADR,qCAEqBA,CAAAA,QAAQ,CAACC,IAAT,EAFrB,QAEQA,IAFR,eAGEJ,OAAO,CAACI,IAAD,CAAP,CAHF,sDAHsB,4CAStBtB,SAAS,CAAC,UAAM,CAAEmB,SAAS,GAAI,CAAtB,CAAwB,CAACH,GAAD,CAAxB,CAAT,CACA,MAAOC,CAAAA,IAAP,CACD,CAXD,CAcA,QAASM,CAAAA,GAAT,EAAe,CACb,eAAsCtB,QAAQ,CAAC,SAAD,CAA9C,yCAAOuB,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,MAAM,CAAGX,QAAQ,CAACX,QAAD,CAAvB,CACA,eAAwCH,QAAQ,CAAC,CAAE0B,MAAM,CAAE,EAAV,CAAcC,KAAK,CAAE,EAArB,CAAD,CAAhD,yCAAOC,YAAP,eAAqBC,eAArB,eAEA9B,SAAS,CAAC,UAAM,CACd,GAAI0B,MAAJ,CAAY,CACVK,cAAc,GACf,CACF,CAJQ,CAIN,CAACL,MAAD,CAJM,CAAT,CAMA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BN,cAAc,YAAKnB,YAAY,CAACD,SAAD,CAAjB,EAAd,CACA,GAAI2B,CAAAA,QAAQ,CAAGN,MAAM,CAACA,MAAtB,CACAI,eAAe,CAACxB,YAAY,CAAC0B,QAAD,CAAb,CAAf,CACD,CAJD,CAOA,mBACE,YAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAE,CAAEC,eAAe,WAAKT,WAAL,CAAjB,CAAqCU,KAAK,WAAKV,WAAL,CAA1C,CAA5B,UAEKK,YAAY,CAACD,KAAb,GAAuB,EAAxB,cACE,KAAC,OAAD,EAAS,SAAS,CAAC,iBAAnB,CAAqC,SAAS,CAAC,MAA/C,CAAsD,OAAO,CAAC,OAA9D,CAAsE,IAAI,CAAC,QAA3E,uBACE,aAAM,SAAS,CAAC,SAAhB,wBADF,EADF,cAKE,KAAC,QAAD,EAAU,WAAW,CAAEJ,WAAvB,CAAoC,YAAY,CAAEK,YAAlD,CAAgE,cAAc,CAAEE,cAAhF,EAPN,EADF,CAYD,CAGD,cAAeR,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport QuoteBox from \"./Components/QuoteBox.component\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nlet quoteURL = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nconst colorsArr = ['4FC1FF', \"E8B9AB\", 'CB769E', '69995D', 'D2D7DF', '3AA7A3', 'ECA400', '006992', 'AFECE7', '81F499', '890620', 'B6465F', '8ACDEA']\n\n\nconst randomArrVal = (arr) => {\n  console.log(arr)\n  let randomNum = Math.floor(Math.random() * arr.length)\n  console.log(arr[randomNum])\n  return arr[randomNum]\n}\n\nconst useFetch = url => {\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n  }\n\n  useEffect(() => { fetchData() }, [url]);\n  return data;\n};\n\n\nfunction App() {\n  const [accentColor, setAccentColor] = useState('#4FC1FF')\n  const quotes = useFetch(quoteURL)\n  const [currentQuote, setCurrentQuote] = useState({ author: '', quote: '' })\n\n  useEffect(() => {\n    if (quotes) {\n      handleNewQuote()\n    }\n  }, [quotes])\n\n  const handleNewQuote = () => {\n    setAccentColor(`#${randomArrVal(colorsArr)}`)\n    let quoteArr = quotes.quotes\n    setCurrentQuote(randomArrVal(quoteArr))\n  }\n\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: `${accentColor}`, color: `${accentColor}` }}>\n      {\n        (currentQuote.quote === \"\") ?\n          <Spinner className=\"loading-spinner\" animation=\"grow\" variant=\"light\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n          :\n          <QuoteBox accentColor={accentColor} currentQuote={currentQuote} handleNewQuote={handleNewQuote} />\n      }\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}