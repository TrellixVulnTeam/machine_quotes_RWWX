{"ast":null,"code":"var _jsxFileName = \"/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteURL = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nconst colorsArr = ['4FC1FF', \"E8B9AB\", 'CB769E', '69995D', 'D2D7DF', '3AA7A3', 'ECA400', '006992', 'AFECE7', '81F499', '890620', 'B6465F', '8ACDEA'];\n\nconst randomArrVal = arr => {\n  console.log(arr);\n  let randomNum = Math.floor(Math.random() * arr.length);\n  console.log(arr[randomNum]);\n  return arr[randomNum];\n};\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n  return data;\n};\n\n_s(useFetch, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\nfunction App() {\n  _s2();\n\n  const [accentColor, setAccentColor] = useState('#4FC1FF');\n  const quotes = useFetch(quoteURL);\n  const [currentQuote, setCurrentQuote] = useState({\n    author: '',\n    quote: ''\n  });\n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"We become what we think about.\");\n    setAuthor(\"Earl Nightingale\");\n  };\n\n  const generateRandomNumber = () => {\n    setRandomNumber(Math.floor(3 * Math.random()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Random Number: \", randomNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generateRandomNumber(),\n        children: \"generate random number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeQuoteAndAuthor(),\n        children: \"Change Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"DWKhvcE0Jyy23yonxg/JpN4ky0A=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/src/App.js"],"names":["React","useEffect","useState","quoteURL","colorsArr","randomArrVal","arr","console","log","randomNum","Math","floor","random","length","useFetch","url","data","setData","fetchData","response","fetch","json","App","accentColor","setAccentColor","quotes","currentQuote","setCurrentQuote","author","quote","changeQuoteAndAuthor","setQuote","setAuthor","generateRandomNumber","setRandomNumber","randomNumber"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;;AAEA,IAAIC,QAAQ,GAAG,wIAAf;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,EAAiF,QAAjF,EAA2F,QAA3F,EAAqG,QAArG,EAA+G,QAA/G,EAAyH,QAAzH,CAAlB;;AAGA,MAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,MAAIG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAAG,CAACO,MAA/B,CAAhB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,SAAD,CAAf;AACA,SAAOH,GAAG,CAACG,SAAD,CAAV;AACD,CALD;;AAOA,MAAMK,QAAQ,GAAGC,GAAG,IAAI;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;;AAEA,iBAAegB,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AAAEiB,IAAAA,SAAS;AAAI,GAAtB,EAAwB,CAACH,GAAD,CAAxB,CAAT;AACA,SAAOC,IAAP;AACD,CAXD;;GAAMF,Q;;AAcN,SAASQ,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,SAAD,CAA9C;AACA,QAAMuB,MAAM,GAAGX,QAAQ,CAACX,QAAD,CAAvB;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC;AAAE0B,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAD,CAAhD;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,QAAQ,CAAC,gCAAD,CAAR;AACAC,IAAAA,SAAS,CAAC,kBAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,eAAe,CAACxB,IAAI,CAACC,KAAL,CAAW,IAAID,IAAI,CAACE,MAAL,EAAf,CAAD,CAAf;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,sCAAoBuB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMF,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,yBACIJ,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,yBACKD,MADL;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAME,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IA7BQR,G;UAEQR,Q;;;KAFRQ,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nlet quoteURL = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nconst colorsArr = ['4FC1FF', \"E8B9AB\", 'CB769E', '69995D', 'D2D7DF', '3AA7A3', 'ECA400', '006992', 'AFECE7', '81F499', '890620', 'B6465F', '8ACDEA']\n\n\nconst randomArrVal = (arr) => {\n  console.log(arr)\n  let randomNum = Math.floor(Math.random() * arr.length)\n  console.log(arr[randomNum])\n  return arr[randomNum]\n}\n\nconst useFetch = url => {\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n  }\n\n  useEffect(() => { fetchData() }, [url]);\n  return data;\n};\n\n\nfunction App() {\n  const [accentColor, setAccentColor] = useState('#4FC1FF')\n  const quotes = useFetch(quoteURL)\n  const [currentQuote, setCurrentQuote] = useState({ author: '', quote: '' })\n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"We become what we think about.\");\n    setAuthor(\"Earl Nightingale\")\n  }\n\n  const generateRandomNumber = () => {\n    setRandomNumber(Math.floor(3 * Math.random()))\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Random Number: {randomNumber}</h1>\n        <button onClick={() => generateRandomNumber()}>generate random number</button>\n        <p>\n          \"{quote}\"\n        </p>\n        <p>\n          - {author}\n        </p>\n        <button onClick={() => changeQuoteAndAuthor()}>Change Quote</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}