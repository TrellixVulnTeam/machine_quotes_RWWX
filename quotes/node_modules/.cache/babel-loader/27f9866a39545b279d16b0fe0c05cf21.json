{"ast":null,"code":"var _jsxFileName = \"/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport QuoteBox from \"./Components/QuoteBox.component\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteURL = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nconst colorsArr = ['4FC1FF', \"E8B9AB\", 'CB769E', '69995D', 'D2D7DF', '3AA7A3', 'ECA400', '006992', 'AFECE7', '81F499', '890620', 'B6465F', '8ACDEA'];\n\nconst randomArrVal = arr => {\n  console.log(arr);\n  let randomNum = Math.floor(Math.random() * arr.length);\n  console.log(arr[randomNum]);\n  return arr[randomNum];\n};\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n  return data;\n};\n\n_s(useFetch, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\nfunction App() {\n  _s2();\n\n  const [accentColor, setAccentColor] = useState('#4FC1FF');\n  const quotes = useFetch(quoteURL);\n  const [currentQuote, setCurrentQuote] = useState({\n    author: '',\n    quote: ''\n  });\n  useEffect(() => {\n    if (quotes) {\n      handleNewQuote();\n    }\n  }, [quotes]);\n\n  const handleNewQuote = () => {\n    setAccentColor(`#${randomArrVal(colorsArr)}`);\n    let quoteArr = quotes.quotes;\n    setCurrentQuote(randomArrVal(quoteArr));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: `${accentColor}`,\n      color: `${accentColor}`\n    },\n    children: currentQuote.quote === \"\" ? /*#__PURE__*/_jsxDEV(Spinner, {\n      className: \"loading-spinner\",\n      animation: \"grow\",\n      variant: \"light\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(QuoteBox, {\n      accentColor: accentColor,\n      currentQuote: currentQuote,\n      handleNewQuote: handleNewQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"U4VNSacwPno58vBSXY0nU8fFljc=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brunafilipasantos/Desktop/front-end/quote-machine/quote-machine/src/App.js"],"names":["React","useEffect","useState","QuoteBox","Spinner","quoteURL","colorsArr","randomArrVal","arr","console","log","randomNum","Math","floor","random","length","useFetch","url","data","setData","fetchData","response","fetch","json","App","accentColor","setAccentColor","quotes","currentQuote","setCurrentQuote","author","quote","handleNewQuote","quoteArr","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport QuoteBox from \"./Components/QuoteBox.component\"\nimport Spinner from 'react-bootstrap/Spinner'\n\nlet quoteURL = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nconst colorsArr = ['4FC1FF', \"E8B9AB\", 'CB769E', '69995D', 'D2D7DF', '3AA7A3', 'ECA400', '006992', 'AFECE7', '81F499', '890620', 'B6465F', '8ACDEA']\n\n\nconst randomArrVal = (arr) => {\n  console.log(arr)\n  let randomNum = Math.floor(Math.random() * arr.length)\n  console.log(arr[randomNum])\n  return arr[randomNum]\n}\n\nconst useFetch = url => {\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n  }\n\n  useEffect(() => { fetchData() }, [url]);\n  return data;\n};\n\n\nfunction App() {\n  const [accentColor, setAccentColor] = useState('#4FC1FF')\n  const quotes = useFetch(quoteURL)\n  const [currentQuote, setCurrentQuote] = useState({ author: '', quote: '' })\n\n  useEffect(() => {\n    if (quotes) {\n      handleNewQuote()\n    }\n  }, [quotes])\n\n  const handleNewQuote = () => {\n    setAccentColor(`#${randomArrVal(colorsArr)}`)\n    let quoteArr = quotes.quotes\n    setCurrentQuote(randomArrVal(quoteArr))\n  }\n\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: `${accentColor}`, color: `${accentColor}` }}>\n      {\n        (currentQuote.quote === \"\") ?\n          <Spinner className=\"loading-spinner\" animation=\"grow\" variant=\"light\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n          :\n          <QuoteBox accentColor={accentColor} currentQuote={currentQuote} handleNewQuote={handleNewQuote} />\n      }\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}